-Find out how to automate finding a node with a set of dependency specifications, These can be specified in many cases in the GLDedNodeCriterion block, but we also want to be able to automatically set those dependencies (by conjunction into & elim). Is it the case that we will always be able to add any dependency we want to a particular node? We rarely need dependencies anyway.

-abstract the deduction process. What in general terms are the inference rules doing?
e.g.
    &E:
        -look for a conjunction
        -assert both conjuncts
    MP:
        -look for a conditional
        -look for the antecendent
        -assert the consequent
    vI:
        -look for either disjunct
        -assert disjunction
    CP:
        -assume antecedent
        -prove the consequent
        -assert conditional

These are the directives of each inference rule:

CE:
    prove a conjunction with the conclusion as a conjunct

CI:
    prove both conjuncts

CP:
    Assume antecedent
    prove consequent

MP:
    prove antecedent

DI:
    prove either disjunct

DE:
    prove conditional : LH -> conclusion
    prove conditional : RH -> conclusion

DNI:
    prove second derivative

DNE:
    prove doubly negated formula

BI:
    prove conditional : LH -> RH
    prove conditional : RH -> LH
BE:
    prove conc<->P or P<->conc

Red:
    Assume negation
    prove contradiction!

Really think about a 'formula condition object'
    -this will mostly be a specification of an exact formula
    -or a partial specification - like for a specific formula F and arbitrary A: F&A ot A&F

define 2 prove methods:
    prove_hard
        calls:
            prove_soft
            prove_hard
    prove_soft
        calls:
            prove soft

prove soft contains the simple bottoming-out inferences.
prove hard includes reductio, and resursuve methods.