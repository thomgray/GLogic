<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/GLDedNode.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/GLDedNode</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GLDedNode.h</DeclaredIn>
            
			
			<NodeRef refid="4"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GLDedNode/setFormula:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GLDedNode.h</DeclaredIn>
			
			<Declaration>@property GLFormula *formula</Declaration>
			
			
			<Anchor>//api/name/formula</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GLDedNode/formula</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GLDedNode.h</DeclaredIn>
			
			<Declaration>@property GLFormula *formula</Declaration>
			
			
			<Anchor>//api/name/formula</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/GLDedNode/formula</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GLDedNode.h</DeclaredIn>
			
			<Declaration>@property GLFormula *formula</Declaration>
			
			
			<Anchor>//api/name/formula</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GLDedNode/setInferenceRule:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GLDedNode.h</DeclaredIn>
			
			<Declaration>@property GLInferenceRule inferenceRule</Declaration>
			
			
			<Anchor>//api/name/inferenceRule</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GLDedNode/inferenceRule</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GLDedNode.h</DeclaredIn>
			
			<Declaration>@property GLInferenceRule inferenceRule</Declaration>
			
			
			<Anchor>//api/name/inferenceRule</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/GLDedNode/inferenceRule</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GLDedNode.h</DeclaredIn>
			
			<Declaration>@property GLInferenceRule inferenceRule</Declaration>
			
			
			<Anchor>//api/name/inferenceRule</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GLDedNode/setDependencies:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GLDedNode.h</DeclaredIn>
			
			<Declaration>@property NSArray&lt;GLDedNode*&gt; *dependencies</Declaration>
			
			
			<Anchor>//api/name/dependencies</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GLDedNode/dependencies</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GLDedNode.h</DeclaredIn>
			
			<Declaration>@property NSArray&lt;GLDedNode*&gt; *dependencies</Declaration>
			
			
			<Anchor>//api/name/dependencies</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/GLDedNode/dependencies</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GLDedNode.h</DeclaredIn>
			
			<Declaration>@property NSArray&lt;GLDedNode*&gt; *dependencies</Declaration>
			
			
			<Anchor>//api/name/dependencies</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GLDedNode/setInferenceNodes:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GLDedNode.h</DeclaredIn>
			
			<Declaration>@property NSArray&lt;GLDedNode*&gt; *inferenceNodes</Declaration>
			
			
			<Anchor>//api/name/inferenceNodes</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GLDedNode/inferenceNodes</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GLDedNode.h</DeclaredIn>
			
			<Declaration>@property NSArray&lt;GLDedNode*&gt; *inferenceNodes</Declaration>
			
			
			<Anchor>//api/name/inferenceNodes</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/GLDedNode/inferenceNodes</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GLDedNode.h</DeclaredIn>
			
			<Declaration>@property NSArray&lt;GLDedNode*&gt; *inferenceNodes</Declaration>
			
			
			<Anchor>//api/name/inferenceNodes</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GLDedNode/setSubProof:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GLDedNode.h</DeclaredIn>
			
			<Declaration>@property GLDeduction *subProof</Declaration>
			
			
			<Anchor>//api/name/subProof</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GLDedNode/subProof</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GLDedNode.h</DeclaredIn>
			
			<Declaration>@property GLDeduction *subProof</Declaration>
			
			
			<Anchor>//api/name/subProof</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/GLDedNode/subProof</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GLDedNode.h</DeclaredIn>
			
			<Declaration>@property GLDeduction *subProof</Declaration>
			
			
			<Anchor>//api/name/subProof</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GLDedNode/initWithFormula:inference:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GLDedNode.h</DeclaredIn>
			
			<Declaration>- (instancetype)initWithFormula:(GLFormula *)form inference:(GLInferenceRule)inf</Declaration>
			
			
			<Anchor>//api/name/initWithFormula:inference:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GLDedNode/inheritDependencies:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GLDedNode.h</DeclaredIn>
			
			<Declaration>- (void)inheritDependencies:(NSArray&lt;GLDedNode*&gt; *)nodes</Declaration>
			
			
			<Anchor>//api/name/inheritDependencies:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/GLDedNode/infer:formula:withNodes:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GLDedNode.h</DeclaredIn>
			
			<Declaration>+ (instancetype)infer:(GLInferenceRule)inf formula:(GLFormula *)form withNodes:(NSArray&lt;GLDedNode*&gt; *)nodes</Declaration>
			
			
			<Anchor>//api/name/infer:formula:withNodes:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GLDedNode/dischargeDependency:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GLDedNode.h</DeclaredIn>
			
			<Declaration>- (void)dischargeDependency:(GLDedNode *)node</Declaration>
			
			
			<Anchor>//api/name/dischargeDependency:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/GLDedNode/infer_DNE:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GLDedNode.h</DeclaredIn>
			
			<Declaration>+ (instancetype)infer_DNE:(GLDedNode *)dn</Declaration>
			
			
			<Anchor>//api/name/infer_DNE:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/GLDedNode/infer_DNI:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GLDedNode.h</DeclaredIn>
			
			<Declaration>+ (instancetype)infer_DNI:(GLDedNode *)node</Declaration>
			
			
			<Anchor>//api/name/infer_DNI:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/GLDedNode/infer_BE:leftToRight:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GLDedNode.h</DeclaredIn>
			
			<Declaration>+ (instancetype)infer_BE:(GLDedNode *)node leftToRight:(BOOL)leftToRight</Declaration>
			
			
			<Anchor>//api/name/infer_BE:leftToRight:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/GLDedNode/infer_BI:conditional2:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GLDedNode.h</DeclaredIn>
			
			<Declaration>+ (instancetype)infer_BI:(GLDedNode *)cd1 conditional2:(GLDedNode *)cd2</Declaration>
			
			
			<Anchor>//api/name/infer_BI:conditional2:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/GLDedNode/infer_CE:leftFormula:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GLDedNode.h</DeclaredIn>
			
			<Declaration>+ (instancetype)infer_CE:(GLDedNode *)conjunction leftFormula:(BOOL)left</Declaration>
			
			
			<Anchor>//api/name/infer_CE:leftFormula:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/GLDedNode/infer_CI:right:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GLDedNode.h</DeclaredIn>
			
			<Declaration>+ (instancetype)infer_CI:(GLDedNode *)leftNode right:(GLDedNode *)rightNode</Declaration>
			
			
			<Anchor>//api/name/infer_CI:right:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/GLDedNode/infer_DE:conditional1:conditional2:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GLDedNode.h</DeclaredIn>
			
			<Declaration>+ (instancetype)infer_DE:(GLDedNode *)disjunction conditional1:(GLDedNode *)c1 conditional2:(GLDedNode *)c2</Declaration>
			
			
			<Anchor>//api/name/infer_DE:conditional1:conditional2:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/GLDedNode/infer_DI:otherDisjunct:keepLeft:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GLDedNode.h</DeclaredIn>
			
			<Declaration>+ (instancetype)infer_DI:(GLDedNode *)node otherDisjunct:(GLFormula *)dj2 keepLeft:(BOOL)left</Declaration>
			
			
			<Anchor>//api/name/infer_DI:otherDisjunct:keepLeft:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/GLDedNode/infer_MP:antecedent:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GLDedNode.h</DeclaredIn>
			
			<Declaration>+ (instancetype)infer_MP:(GLDedNode *)conditinal antecedent:(GLDedNode *)ant</Declaration>
			
			
			<Anchor>//api/name/infer_MP:antecedent:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/GLDedNode/infer_MT:negConsequent:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GLDedNode.h</DeclaredIn>
			
			<Declaration>+ (instancetype)infer_MT:(GLDedNode *)conditional negConsequent:(GLDedNode *)cons</Declaration>
			
			
			<Anchor>//api/name/infer_MT:negConsequent:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/GLDedNode/infer_CP:minorConc:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GLDedNode.h</DeclaredIn>
			
			<Declaration>+ (instancetype)infer_CP:(GLDedNode *)assumption minorConc:(GLDedNode *)minorConc</Declaration>
			
			
			<Anchor>//api/name/infer_CP:minorConc:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/GLDedNode/infer_RAA:contradiction:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GLDedNode.h</DeclaredIn>
			
			<Declaration>+ (instancetype)infer_RAA:(GLDedNode *)assumption contradiction:(GLDedNode *)contra</Declaration>
			
			
			<Anchor>//api/name/infer_RAA:contradiction:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
        
        
	</File>
</Tokens>